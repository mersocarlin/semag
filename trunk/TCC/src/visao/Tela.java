/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Tela.java
 *
 * Created on 10/03/2010, 14:01:13
 */
package visao;

import threads.BarraProgresso;
import threads.AtualizaMMQ;
import ag.AlgoritmoGenetico;
import ag.Cromossomo;
import entrada.Entrada;
import entrada.Ponto;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author Hemerson
 */
public class Tela extends javax.swing.JFrame {

    private UIManager.LookAndFeelInfo[] looks = UIManager.getInstalledLookAndFeels();
    DefaultTableModel modelo;
    DefaultTableModel modeloResultado;
    DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
    DefaultListModel modeloLista;
    private BufferedImage bi;
    Parametros param;
    AlgoritmoGenetico ag;
    AtualizaMMQ atualiza;

    /** Creates new form Tela */
    public Tela() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setExtendedState(MAXIMIZED_BOTH);
        try {
            UIManager.setLookAndFeel(looks[3].getClassName());
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception e) {
        }

        /* Background */
        try {
            bi = ImageIO.read(new File("arquivos/background.jpg"));
        } catch (Exception e) {
            System.out.println("Erro no carregamento do background: " + e);
        }

        this.ag = new AlgoritmoGenetico();
        param = new Parametros();
        param.setAtualiza(jTextFieldMMQ, "00000.00");
        param.setUmax(jPanelDesenho.getWidth());
        param.setVmax(jPanelDesenho.getHeight());
        param.setXmax(jPanelDesenho.getWidth());
        param.setYmax(jPanelDesenho.getHeight());

        jTextFieldMMQ.setBackground(Color.WHITE);
        jTextFieldResultadoAlcance.setBackground(Color.WHITE);
        jTextFieldResultadoContribuicao.setBackground(Color.WHITE);
        jTextFieldResultadoEfeitoPepita.setBackground(Color.WHITE);

        jSliderAlcance.setValue(jSliderAlcance.getMaximum() / 2);

        jTableArquivoTexto.getTableHeader().setReorderingAllowed(false);
        jTablePlanilha.getTableHeader().setReorderingAllowed(false);
        jTableResultados.getTableHeader().setReorderingAllowed(false);
        cellRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        jTableResultados.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTableResultados.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTableResultados.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTableResultados.getColumnModel().getColumn(3).setPreferredWidth(160);
        jTableResultados.getColumnModel().getColumn(0).setCellRenderer(cellRenderer);
        jTableResultados.getColumnModel().getColumn(1).setCellRenderer(cellRenderer);
        jTableResultados.getColumnModel().getColumn(2).setCellRenderer(cellRenderer);
        jTableResultados.getColumnModel().getColumn(3).setCellRenderer(cellRenderer);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupCruzamento = new javax.swing.ButtonGroup();
        buttonGroupMutacao = new javax.swing.ButtonGroup();
        buttonGroupSelecao = new javax.swing.ButtonGroup();
        jDesktopPane1 = new JDesktopPane() {
            @Override
            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                if (bi != null) {
                    g.drawImage(bi, 0, 0, this.getWidth(), this.getHeight(), this);
                }
            }
        };
        jInternalFrameTelaSemivariograma = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jPanelDesenho = jPanelDesenho = new Desenho();
        jComboBoxModelo = new javax.swing.JComboBox();
        jComboBoxMetodo = new javax.swing.JComboBox();
        jTextFieldMMQ = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldAlcance = new javax.swing.JTextField();
        jSliderAlcance = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSliderEfeitoPepita = new javax.swing.JSlider();
        jTextFieldEfeitoPepita = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jSliderContribuicao = new javax.swing.JSlider();
        jTextFieldContribuicao = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jSliderCutOff = new javax.swing.JSlider();
        jTextFieldCutOff = new javax.swing.JTextField();
        jInternalFrameEntrada = new javax.swing.JInternalFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePlanilha = new javax.swing.JTable();
        jButtonAbrirPlanilha = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListX = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListY = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListZ = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonCarregarDadosPlanilha = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableArquivoTexto = new javax.swing.JTable();
        jButtonArquivoX = new javax.swing.JButton();
        jButtonArquivoY = new javax.swing.JButton();
        jButtonArquivoZ = new javax.swing.JButton();
        jButtonCarregarDadosArquivoTexto = new javax.swing.JButton();
        jInternalFrameAG = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        jPanelCruzamento = new javax.swing.JPanel();
        jCheckBoxAritmetico = new javax.swing.JCheckBox();
        jCheckBoxBLX = new javax.swing.JCheckBox();
        jCheckBoxHeuristico = new javax.swing.JCheckBox();
        jCheckBoxMediaGeometrica = new javax.swing.JCheckBox();
        jCheckBoxMediaSimples = new javax.swing.JCheckBox();
        jPanelSelecao = new javax.swing.JPanel();
        jCheckBoxRoleta = new javax.swing.JCheckBox();
        jCheckBoxTorneio = new javax.swing.JCheckBox();
        jButtonIniciarAG = new javax.swing.JButton();
        jPanelMutacao = new javax.swing.JPanel();
        jCheckBoxCreep = new javax.swing.JCheckBox();
        jCheckBoxGaussiana = new javax.swing.JCheckBox();
        jCheckBoxNaoUniforme = new javax.swing.JCheckBox();
        jCheckBoxNaoUniformeMultipla = new javax.swing.JCheckBox();
        jCheckBoxUniforme = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTamPopulacao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldNumGeracoes = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldTxMutacao = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldTxCruzamento = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldElitismo = new javax.swing.JTextField();
        jProgressBarAguarde = new javax.swing.JProgressBar();
        jInternalFrameResultados = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaResultado = new javax.swing.JTextArea();
        jButtonVoltarTelaAG = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableResultados = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldResultadoAlcance = new javax.swing.JTextField();
        jTextFieldResultadoEfeitoPepita = new javax.swing.JTextField();
        jTextFieldResultadoContribuicao = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonVerResultado = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArquivo = new javax.swing.JMenu();
        jMenuItemDadosEntrada = new javax.swing.JMenuItem();
        jMenuItemTelaSemivariograma = new javax.swing.JMenuItem();
        jMenuItemAG = new javax.swing.JMenuItem();
        jMenuSobre = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Software SEMAG");

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));

        jInternalFrameTelaSemivariograma.setClosable(true);
        jInternalFrameTelaSemivariograma.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrameTelaSemivariograma.setTitle("Tela Semivariograma");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jPanelDesenho.setBackground(new java.awt.Color(255, 255, 255));
        jPanelDesenho.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pairwise", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 153))); // NOI18N

        javax.swing.GroupLayout jPanelDesenhoLayout = new javax.swing.GroupLayout(jPanelDesenho);
        jPanelDesenho.setLayout(jPanelDesenhoLayout);
        jPanelDesenhoLayout.setHorizontalGroup(
            jPanelDesenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 489, Short.MAX_VALUE)
        );
        jPanelDesenhoLayout.setVerticalGroup(
            jPanelDesenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 406, Short.MAX_VALUE)
        );

        jComboBoxModelo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Modelo", "Circular", "Esferico", "Exponencial", "Gaussiano", "Linear" }));
        jComboBoxModelo.setNextFocusableComponent(jTextFieldAlcance);
        jComboBoxModelo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxModeloItemStateChanged(evt);
            }
        });

        jComboBoxMetodo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Metodo", "Cressie", "Matheron", "Pairwise" }));
        jComboBoxMetodo.setNextFocusableComponent(jComboBoxModelo);
        jComboBoxMetodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMetodoItemStateChanged(evt);
            }
        });

        jTextFieldMMQ.setEditable(false);
        jTextFieldMMQ.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldMMQ.setText("00.0000");

        jLabel4.setText("MMQ:");

        jPanel4.setBackground(new java.awt.Color(211, 211, 252));

        jTextFieldAlcance.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldAlcance.setText("246");
        jTextFieldAlcance.setNextFocusableComponent(jTextFieldEfeitoPepita);
        jTextFieldAlcance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAlcanceActionPerformed(evt);
            }
        });
        jTextFieldAlcance.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldAlcanceFocusGained(evt);
            }
        });

        jSliderAlcance.setBackground(new java.awt.Color(211, 211, 252));
        jSliderAlcance.setMaximum(500);
        jSliderAlcance.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSliderAlcance.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderAlcanceStateChanged(evt);
            }
        });

        jLabel9.setText("A");

        jLabel10.setText("C0");

        jSliderEfeitoPepita.setBackground(new java.awt.Color(211, 211, 252));
        jSliderEfeitoPepita.setMaximum(10000);
        jSliderEfeitoPepita.setValue(0);
        jSliderEfeitoPepita.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSliderEfeitoPepita.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderEfeitoPepitaStateChanged(evt);
            }
        });

        jTextFieldEfeitoPepita.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldEfeitoPepita.setText("0.0");
        jTextFieldEfeitoPepita.setNextFocusableComponent(jTextFieldContribuicao);
        jTextFieldEfeitoPepita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEfeitoPepitaActionPerformed(evt);
            }
        });
        jTextFieldEfeitoPepita.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEfeitoPepitaFocusGained(evt);
            }
        });

        jLabel11.setText("C1");

        jSliderContribuicao.setBackground(new java.awt.Color(211, 211, 252));
        jSliderContribuicao.setMaximum(10000);
        jSliderContribuicao.setValue(2200);
        jSliderContribuicao.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSliderContribuicao.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderContribuicaoStateChanged(evt);
            }
        });

        jTextFieldContribuicao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldContribuicao.setText("0.22");
        jTextFieldContribuicao.setNextFocusableComponent(jTextFieldCutOff);
        jTextFieldContribuicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldContribuicaoActionPerformed(evt);
            }
        });
        jTextFieldContribuicao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldContribuicaoFocusGained(evt);
            }
        });

        jLabel12.setText("Cut-off");

        jSliderCutOff.setBackground(new java.awt.Color(211, 211, 252));
        jSliderCutOff.setMaximum(10000);
        jSliderCutOff.setValue(8000);
        jSliderCutOff.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSliderCutOff.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderCutOffStateChanged(evt);
            }
        });

        jTextFieldCutOff.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldCutOff.setText("0.8");
        jTextFieldCutOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCutOffActionPerformed(evt);
            }
        });
        jTextFieldCutOff.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldCutOffFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderAlcance, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldAlcance, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderEfeitoPepita, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldEfeitoPepita, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderContribuicao, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldContribuicao, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderCutOff, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCutOff, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldAlcance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSliderAlcance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldEfeitoPepita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSliderEfeitoPepita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldContribuicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSliderContribuicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldCutOff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSliderCutOff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDesenho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextFieldMMQ, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelDesenho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldMMQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jInternalFrameTelaSemivariogramaLayout = new javax.swing.GroupLayout(jInternalFrameTelaSemivariograma.getContentPane());
        jInternalFrameTelaSemivariograma.getContentPane().setLayout(jInternalFrameTelaSemivariogramaLayout);
        jInternalFrameTelaSemivariogramaLayout.setHorizontalGroup(
            jInternalFrameTelaSemivariogramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameTelaSemivariogramaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jInternalFrameTelaSemivariogramaLayout.setVerticalGroup(
            jInternalFrameTelaSemivariogramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameTelaSemivariogramaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jInternalFrameTelaSemivariograma.setBounds(10, 10, 890, 510);
        jDesktopPane1.add(jInternalFrameTelaSemivariograma, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jInternalFrameEntrada.setClosable(true);
        jInternalFrameEntrada.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrameEntrada.setTitle("Leitura dos Dados de Entrada");

        jTablePlanilha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTablePlanilha.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTablePlanilha.setCellSelectionEnabled(true);
        jScrollPane2.setViewportView(jTablePlanilha);

        jButtonAbrirPlanilha.setText("Abrir Planilha");
        jButtonAbrirPlanilha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAbrirPlanilhaActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jListX);

        jScrollPane4.setViewportView(jListY);

        jScrollPane5.setViewportView(jListZ);

        jLabel1.setText("Variável X");

        jLabel2.setText("Variável Z");

        jLabel3.setText("Variável Y");

        jButtonCarregarDadosPlanilha.setText("Carregar Dados");
        jButtonCarregarDadosPlanilha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarregarDadosPlanilhaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButtonAbrirPlanilha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 468, Short.MAX_VALUE)
                        .addComponent(jButtonCarregarDadosPlanilha, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane4, 0, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAbrirPlanilha)
                    .addComponent(jButtonCarregarDadosPlanilha))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Planilha", jPanel5);

        jTableArquivoTexto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "X", "Y", "Z"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableArquivoTexto.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane6.setViewportView(jTableArquivoTexto);

        jButtonArquivoX.setText("X");
        jButtonArquivoX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonArquivoXActionPerformed(evt);
            }
        });

        jButtonArquivoY.setText("Y");
        jButtonArquivoY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonArquivoYActionPerformed(evt);
            }
        });

        jButtonArquivoZ.setText("Z");
        jButtonArquivoZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonArquivoZActionPerformed(evt);
            }
        });

        jButtonCarregarDadosArquivoTexto.setText("Carregar Dados");
        jButtonCarregarDadosArquivoTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarregarDadosArquivoTextoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jButtonArquivoX, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)
                .addComponent(jButtonArquivoY, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171)
                .addComponent(jButtonArquivoZ, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(580, Short.MAX_VALUE)
                .addComponent(jButtonCarregarDadosArquivoTexto)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonArquivoZ)
                    .addComponent(jButtonArquivoX)
                    .addComponent(jButtonArquivoY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCarregarDadosArquivoTexto)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Arquivo de Texto", jPanel6);

        javax.swing.GroupLayout jInternalFrameEntradaLayout = new javax.swing.GroupLayout(jInternalFrameEntrada.getContentPane());
        jInternalFrameEntrada.getContentPane().setLayout(jInternalFrameEntradaLayout);
        jInternalFrameEntradaLayout.setHorizontalGroup(
            jInternalFrameEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameEntradaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                .addContainerGap())
        );
        jInternalFrameEntradaLayout.setVerticalGroup(
            jInternalFrameEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameEntradaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );

        jInternalFrameEntrada.setBounds(40, 20, 740, 560);
        jDesktopPane1.add(jInternalFrameEntrada, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jInternalFrameAG.setClosable(true);
        jInternalFrameAG.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrameAG.setTitle("Algoritmo Genético");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanelCruzamento.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCruzamento.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cruzamento", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jCheckBoxAritmetico.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupCruzamento.add(jCheckBoxAritmetico);
        jCheckBoxAritmetico.setText("Aritmético");

        jCheckBoxBLX.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupCruzamento.add(jCheckBoxBLX);
        jCheckBoxBLX.setText("BLX");

        jCheckBoxHeuristico.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupCruzamento.add(jCheckBoxHeuristico);
        jCheckBoxHeuristico.setText("Heurístico");

        jCheckBoxMediaGeometrica.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupCruzamento.add(jCheckBoxMediaGeometrica);
        jCheckBoxMediaGeometrica.setText("Média Geométrica");

        jCheckBoxMediaSimples.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupCruzamento.add(jCheckBoxMediaSimples);
        jCheckBoxMediaSimples.setSelected(true);
        jCheckBoxMediaSimples.setText("Média Simples");

        javax.swing.GroupLayout jPanelCruzamentoLayout = new javax.swing.GroupLayout(jPanelCruzamento);
        jPanelCruzamento.setLayout(jPanelCruzamentoLayout);
        jPanelCruzamentoLayout.setHorizontalGroup(
            jPanelCruzamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCruzamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCruzamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxAritmetico)
                    .addComponent(jCheckBoxBLX)
                    .addComponent(jCheckBoxHeuristico)
                    .addComponent(jCheckBoxMediaGeometrica)
                    .addComponent(jCheckBoxMediaSimples))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelCruzamentoLayout.setVerticalGroup(
            jPanelCruzamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCruzamentoLayout.createSequentialGroup()
                .addComponent(jCheckBoxAritmetico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxBLX)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxHeuristico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxMediaGeometrica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxMediaSimples))
        );

        jPanelSelecao.setBackground(new java.awt.Color(255, 255, 255));
        jPanelSelecao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seleção", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jCheckBoxRoleta.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupSelecao.add(jCheckBoxRoleta);
        jCheckBoxRoleta.setSelected(true);
        jCheckBoxRoleta.setText("Roleta");

        jCheckBoxTorneio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupSelecao.add(jCheckBoxTorneio);
        jCheckBoxTorneio.setText("Torneio");

        javax.swing.GroupLayout jPanelSelecaoLayout = new javax.swing.GroupLayout(jPanelSelecao);
        jPanelSelecao.setLayout(jPanelSelecaoLayout);
        jPanelSelecaoLayout.setHorizontalGroup(
            jPanelSelecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSelecaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSelecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxRoleta)
                    .addComponent(jCheckBoxTorneio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSelecaoLayout.setVerticalGroup(
            jPanelSelecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSelecaoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jCheckBoxRoleta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxTorneio)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jButtonIniciarAG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/aplicar.png"))); // NOI18N
        jButtonIniciarAG.setToolTipText("Iniciar AG");
        jButtonIniciarAG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIniciarAGActionPerformed(evt);
            }
        });

        jPanelMutacao.setBackground(new java.awt.Color(255, 255, 255));
        jPanelMutacao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mutação", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jCheckBoxCreep.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupMutacao.add(jCheckBoxCreep);
        jCheckBoxCreep.setText("Creep");

        jCheckBoxGaussiana.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupMutacao.add(jCheckBoxGaussiana);
        jCheckBoxGaussiana.setText("Gaussiana");
        jCheckBoxGaussiana.setEnabled(false);

        jCheckBoxNaoUniforme.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupMutacao.add(jCheckBoxNaoUniforme);
        jCheckBoxNaoUniforme.setText("Não-Uniforme");
        jCheckBoxNaoUniforme.setEnabled(false);

        jCheckBoxNaoUniformeMultipla.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupMutacao.add(jCheckBoxNaoUniformeMultipla);
        jCheckBoxNaoUniformeMultipla.setText("Não-Uniforme Múltipla");
        jCheckBoxNaoUniformeMultipla.setEnabled(false);

        jCheckBoxUniforme.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupMutacao.add(jCheckBoxUniforme);
        jCheckBoxUniforme.setSelected(true);
        jCheckBoxUniforme.setText("Uniforme");

        javax.swing.GroupLayout jPanelMutacaoLayout = new javax.swing.GroupLayout(jPanelMutacao);
        jPanelMutacao.setLayout(jPanelMutacaoLayout);
        jPanelMutacaoLayout.setHorizontalGroup(
            jPanelMutacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMutacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMutacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxCreep)
                    .addComponent(jCheckBoxGaussiana)
                    .addComponent(jCheckBoxNaoUniforme)
                    .addComponent(jCheckBoxNaoUniformeMultipla)
                    .addComponent(jCheckBoxUniforme))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelMutacaoLayout.setVerticalGroup(
            jPanelMutacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMutacaoLayout.createSequentialGroup()
                .addComponent(jCheckBoxCreep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxGaussiana)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxNaoUniforme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxNaoUniformeMultipla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxUniforme))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do AG", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel5.setText("Tam. População:");

        jTextFieldTamPopulacao.setText("200");
        jTextFieldTamPopulacao.setNextFocusableComponent(jTextFieldNumGeracoes);
        jTextFieldTamPopulacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTamPopulacaoActionPerformed(evt);
            }
        });
        jTextFieldTamPopulacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldTamPopulacaoFocusGained(evt);
            }
        });

        jLabel6.setText("Num. Gerações:");

        jTextFieldNumGeracoes.setText("50");
        jTextFieldNumGeracoes.setNextFocusableComponent(jTextFieldTxMutacao);
        jTextFieldNumGeracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNumGeracoesActionPerformed(evt);
            }
        });
        jTextFieldNumGeracoes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNumGeracoesFocusGained(evt);
            }
        });

        jLabel7.setText("Tx. Mutação (%):");

        jTextFieldTxMutacao.setText("5");
        jTextFieldTxMutacao.setNextFocusableComponent(jTextFieldTxCruzamento);
        jTextFieldTxMutacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTxMutacaoActionPerformed(evt);
            }
        });
        jTextFieldTxMutacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldTxMutacaoFocusGained(evt);
            }
        });

        jLabel8.setText("Tx. Cruzamento (%):");

        jTextFieldTxCruzamento.setText("75");
        jTextFieldTxCruzamento.setNextFocusableComponent(jTextFieldElitismo);
        jTextFieldTxCruzamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTxCruzamentoActionPerformed(evt);
            }
        });
        jTextFieldTxCruzamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldTxCruzamentoFocusGained(evt);
            }
        });

        jLabel13.setText("Elitismo (%)");

        jTextFieldElitismo.setText("5");
        jTextFieldElitismo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldElitismoActionPerformed(evt);
            }
        });
        jTextFieldElitismo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldElitismoFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldTxCruzamento)
                            .addComponent(jTextFieldTxMutacao)
                            .addComponent(jTextFieldNumGeracoes)
                            .addComponent(jTextFieldTamPopulacao, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldElitismo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTamPopulacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNumGeracoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTxMutacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTxCruzamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldElitismo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jProgressBarAguarde.setStringPainted(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBarAguarde, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanelCruzamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelMutacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelSelecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButtonIniciarAG, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBarAguarde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelSelecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelMutacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelCruzamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonIniciarAG, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jInternalFrameAGLayout = new javax.swing.GroupLayout(jInternalFrameAG.getContentPane());
        jInternalFrameAG.getContentPane().setLayout(jInternalFrameAGLayout);
        jInternalFrameAGLayout.setHorizontalGroup(
            jInternalFrameAGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jInternalFrameAGLayout.setVerticalGroup(
            jInternalFrameAGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jInternalFrameAG.setBounds(50, 20, 670, 280);
        jDesktopPane1.add(jInternalFrameAG, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jInternalFrameResultados.setClosable(true);
        jInternalFrameResultados.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrameResultados.setTitle("Resultados AG");

        jTextAreaResultado.setColumns(20);
        jTextAreaResultado.setEditable(false);
        jTextAreaResultado.setRows(5);
        jScrollPane1.setViewportView(jTextAreaResultado);

        jButtonVoltarTelaAG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/voltar.png"))); // NOI18N
        jButtonVoltarTelaAG.setToolTipText("Retorna para as configurações do AG");
        jButtonVoltarTelaAG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarTelaAGActionPerformed(evt);
            }
        });

        jTableResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alcance", "Efeito Pepita", "Contribuição", "Fitness"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableResultados.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableResultados.setShowVerticalLines(false);
        jTableResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableResultadosMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jTableResultados);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Melhor Resultado", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel14.setText("A:");

        jLabel15.setText("C0:");

        jLabel16.setText("C1:");

        jTextFieldResultadoAlcance.setEditable(false);
        jTextFieldResultadoAlcance.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextFieldResultadoEfeitoPepita.setEditable(false);
        jTextFieldResultadoEfeitoPepita.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextFieldResultadoContribuicao.setEditable(false);
        jTextFieldResultadoContribuicao.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButtonVerResultado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/verResultado.png"))); // NOI18N
        jButtonVerResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerResultadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(10, 10, 10)
                        .addComponent(jTextFieldResultadoAlcance, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldResultadoEfeitoPepita, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldResultadoContribuicao, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jButtonVerResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextFieldResultadoAlcance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextFieldResultadoEfeitoPepita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextFieldResultadoContribuicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonVerResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jInternalFrameResultadosLayout = new javax.swing.GroupLayout(jInternalFrameResultados.getContentPane());
        jInternalFrameResultados.getContentPane().setLayout(jInternalFrameResultadosLayout);
        jInternalFrameResultadosLayout.setHorizontalGroup(
            jInternalFrameResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jInternalFrameResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonVoltarTelaAG, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jInternalFrameResultadosLayout.setVerticalGroup(
            jInternalFrameResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrameResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameResultadosLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonVoltarTelaAG, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jInternalFrameResultados.setBounds(50, 10, 770, 540);
        jDesktopPane1.add(jInternalFrameResultados, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenuArquivo.setText("Arquivo");

        jMenuItemDadosEntrada.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemDadosEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/entrada.png"))); // NOI18N
        jMenuItemDadosEntrada.setText("Dados da Entrada");
        jMenuItemDadosEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDadosEntradaActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemDadosEntrada);

        jMenuItemTelaSemivariograma.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemTelaSemivariograma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/semivariograma.png"))); // NOI18N
        jMenuItemTelaSemivariograma.setText("Semivariograma");
        jMenuItemTelaSemivariograma.setEnabled(false);
        jMenuItemTelaSemivariograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTelaSemivariogramaActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemTelaSemivariograma);

        jMenuItemAG.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemAG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ag.png"))); // NOI18N
        jMenuItemAG.setText("Algoritmo Genético");
        jMenuItemAG.setEnabled(false);
        jMenuItemAG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAGActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemAG);

        jMenuBar1.add(jMenuArquivo);

        jMenuSobre.setText("Sobre");
        jMenuBar1.add(jMenuSobre);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxMetodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxMetodoItemStateChanged
        this.desenhaGrafico();
    }//GEN-LAST:event_jComboBoxMetodoItemStateChanged

    private void jComboBoxModeloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxModeloItemStateChanged
        this.desenhaGrafico();
    }//GEN-LAST:event_jComboBoxModeloItemStateChanged

    private void jButtonIniciarAGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIniciarAGActionPerformed
        Cursor cursor = new Cursor(Cursor.WAIT_CURSOR);
        jInternalFrameAG.setCursor(cursor);
        try {
            /* SETA METODO DE SELECAO */
            ag.setSelecao(jCheckBoxRoleta.isSelected() ? "Roleta"
                    : (jCheckBoxTorneio.isSelected() ? "Torneio" : "Roleta"));

            /* SETA METODO DE CRUZAMENTO */
            ag.setCruzamento(jCheckBoxAritmetico.isSelected() ? "Aritmetico"
                    : (jCheckBoxBLX.isSelected() ? "BLX"
                    : (jCheckBoxHeuristico.isSelected() ? "Heuristico"
                    : (jCheckBoxMediaGeometrica.isSelected() ? "Media Geometrica"
                    : (jCheckBoxMediaSimples.isSelected() ? "Media Simples" : "Media Simples")))));

            /* SETA METODO DE MUTACAO */
            ag.setMutacao(jCheckBoxCreep.isSelected() ? "Creep"
                    : (jCheckBoxGaussiana.isSelected() ? "Gaussiana"
                    : (jCheckBoxNaoUniforme.isSelected() ? "Nao-Uniforme"
                    : (jCheckBoxNaoUniformeMultipla.isSelected() ? "Nao-Uniforme Multipla"
                    : (jCheckBoxMediaSimples.isSelected() ? "Uniforme" : "Uniforme")))));


            this.trataValorDigitado(jTextFieldTamPopulacao.getText());
            this.trataValorDigitado(jTextFieldNumGeracoes.getText());
            this.trataValorDigitado(jTextFieldTxCruzamento.getText());
            this.trataValorDigitado(jTextFieldTxMutacao.getText());
            this.trataValorDigitado(jTextFieldElitismo.getText());

            ag.setGeracoes(new ArrayList<List>());
            ag.setPopulacao(new ArrayList<Cromossomo>());
            ag.setTamanhoPopulacao(Integer.parseInt(jTextFieldTamPopulacao.getText()));
            ag.setTaxaMutacao(Double.parseDouble(jTextFieldTxMutacao.getText()) / 100);
            ag.setTaxaCruzamento(Double.parseDouble(jTextFieldTxCruzamento.getText()) / 100);
            ag.setTamanhoGeracao(Integer.parseInt(jTextFieldNumGeracoes.getText()));
            ag.setElitismo(Double.parseDouble(jTextFieldElitismo.getText()) / 100);

            jProgressBarAguarde.setStringPainted(true);
            BarraProgresso t = new BarraProgresso(jProgressBarAguarde, 0);

            modeloResultado = (DefaultTableModel) jTableResultados.getModel();
            while (modeloResultado.getRowCount() > 0) {
                modeloResultado.removeRow(0);
            }

            ag.inicia(jSliderAlcance.getMaximum(), jSliderEfeitoPepita.getMaximum(), param, t, jTextAreaResultado, modeloResultado);
            jInternalFrameAG.setVisible(false);

            Component content = this.getContentPane();
            int x = (content.getWidth() - jInternalFrameResultados.getWidth()) / 2;
            int y = (content.getHeight() - jInternalFrameResultados.getHeight()) / 2;
            jInternalFrameResultados.setLocation(x, y);
            jInternalFrameResultados.setVisible(true);

            t.POSICAO = jProgressBarAguarde.getMaximum();
            t.interrupt();

            /* Mostra melhor cromossomo */
            int linha = jTableResultados.getRowCount() - 1;
            int a = new Integer("" + jTableResultados.getValueAt(linha, 0));
            double c0 = Double.parseDouble("" + jTableResultados.getValueAt(linha, 1));
            double c1 = Double.parseDouble("" + jTableResultados.getValueAt(linha, 2));
            jTextFieldResultadoAlcance.setText("" + a);
            jTextFieldResultadoEfeitoPepita.setText("" + c0);
            jTextFieldResultadoContribuicao.setText("" + c1);

            this.desenhaGrafico();
        } catch (Exception e) {
            System.out.println("erro aqui" + e);
            JOptionPane.showMessageDialog(null, "ERRO!", "Erro ao iniciar AG", JOptionPane.INFORMATION_MESSAGE);
        }
        cursor = new Cursor(Cursor.DEFAULT_CURSOR);
        jInternalFrameAG.setCursor(cursor);
    }//GEN-LAST:event_jButtonIniciarAGActionPerformed

    private void jTextFieldTamPopulacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTamPopulacaoActionPerformed
        jTextFieldTamPopulacao.setText(this.trataValorDigitado(jTextFieldTamPopulacao.getText()));
        jTextFieldNumGeracoes.requestFocus();
    }//GEN-LAST:event_jTextFieldTamPopulacaoActionPerformed

    private void jTextFieldNumGeracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNumGeracoesActionPerformed
        jTextFieldNumGeracoes.setText(this.trataValorDigitado(jTextFieldNumGeracoes.getText()));
        jTextFieldTxMutacao.requestFocus();
    }//GEN-LAST:event_jTextFieldNumGeracoesActionPerformed

    private void jTextFieldTxMutacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTxMutacaoActionPerformed
        jTextFieldTxMutacao.setText(this.trataValorDigitado(jTextFieldTxMutacao.getText()));
        jTextFieldTxCruzamento.requestFocus();
    }//GEN-LAST:event_jTextFieldTxMutacaoActionPerformed

    private void jTextFieldTxCruzamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTxCruzamentoActionPerformed
        jTextFieldTxCruzamento.setText(this.trataValorDigitado(jTextFieldTxCruzamento.getText()));
        jTextFieldElitismo.requestFocus();
    }//GEN-LAST:event_jTextFieldTxCruzamentoActionPerformed

    private void jTextFieldTamPopulacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTamPopulacaoFocusGained
        jTextFieldTamPopulacao.setSelectionStart(0);
        jTextFieldTamPopulacao.setSelectionEnd(jTextFieldTamPopulacao.getText().length());
    }//GEN-LAST:event_jTextFieldTamPopulacaoFocusGained

    private void jTextFieldNumGeracoesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNumGeracoesFocusGained
        jTextFieldNumGeracoes.setSelectionStart(0);
        jTextFieldNumGeracoes.setSelectionEnd(jTextFieldNumGeracoes.getText().length());
    }//GEN-LAST:event_jTextFieldNumGeracoesFocusGained

    private void jTextFieldTxMutacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTxMutacaoFocusGained
        jTextFieldTxMutacao.setSelectionStart(0);
        jTextFieldTxMutacao.setSelectionEnd(jTextFieldTxMutacao.getText().length());
    }//GEN-LAST:event_jTextFieldTxMutacaoFocusGained

    private void jTextFieldTxCruzamentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTxCruzamentoFocusGained
        jTextFieldTxCruzamento.setSelectionStart(0);
        jTextFieldTxCruzamento.setSelectionEnd(jTextFieldTxCruzamento.getText().length());
    }//GEN-LAST:event_jTextFieldTxCruzamentoFocusGained

    private void jButtonVoltarTelaAGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarTelaAGActionPerformed
        jInternalFrameResultados.setVisible(false);
        Component content = this.getContentPane();
        int x = (content.getWidth() - jInternalFrameAG.getWidth()) / 2;
        int y = (content.getHeight() - jInternalFrameAG.getHeight()) / 2;
        jInternalFrameAG.setLocation(x, y);
        jProgressBarAguarde.setStringPainted(false);
        jProgressBarAguarde.setValue(0);
        jInternalFrameAG.setVisible(true);
    }//GEN-LAST:event_jButtonVoltarTelaAGActionPerformed

    private void jTextFieldAlcanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAlcanceActionPerformed
        int value = jSliderAlcance.getValue();
        String digitado = jTextFieldAlcance.getText().replace(',', '.');
        try {
            double valor = Double.parseDouble(digitado);
            if ((int) valor <= jSliderAlcance.getMaximum()) {
                jTextFieldAlcance.setText("" + (int) valor);
                jSliderAlcance.setValue((int) valor);
            } else {
                jTextFieldAlcance.setText("" + value);
                jSliderAlcance.setValue(value);
            }
        } catch (Exception e) {
            jTextFieldAlcance.setText("" + value);
            jSliderAlcance.setValue(value);
        }
        this.desenhaGrafico();
}//GEN-LAST:event_jTextFieldAlcanceActionPerformed

    private void jTextFieldAlcanceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAlcanceFocusGained
        jTextFieldAlcance.setSelectionStart(0);
        jTextFieldAlcance.setSelectionEnd(jTextFieldAlcance.getText().length());
}//GEN-LAST:event_jTextFieldAlcanceFocusGained

    private void jSliderAlcanceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderAlcanceStateChanged
        this.desenhaGrafico();
}//GEN-LAST:event_jSliderAlcanceStateChanged

    private void jSliderEfeitoPepitaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderEfeitoPepitaStateChanged
        this.desenhaGrafico();
}//GEN-LAST:event_jSliderEfeitoPepitaStateChanged

    private void jTextFieldEfeitoPepitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEfeitoPepitaActionPerformed
        int value = jSliderEfeitoPepita.getValue();
        String digitado = jTextFieldEfeitoPepita.getText().replace(',', '.');
        try {
            double valor = Double.parseDouble(digitado);
            if ((int) (valor * 10000) <= jSliderEfeitoPepita.getMaximum()) {
                jTextFieldEfeitoPepita.setText("" + valor);
                jSliderEfeitoPepita.setValue((int) (valor * 10000));
            } else {
                jTextFieldEfeitoPepita.setText("" + value);
                jSliderEfeitoPepita.setValue(value);
            }
        } catch (Exception e) {
            jTextFieldEfeitoPepita.setText("" + value);
            jSliderEfeitoPepita.setValue(value);
        }
}//GEN-LAST:event_jTextFieldEfeitoPepitaActionPerformed

    private void jTextFieldEfeitoPepitaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEfeitoPepitaFocusGained
        jTextFieldEfeitoPepita.setSelectionStart(0);
        jTextFieldEfeitoPepita.setSelectionEnd(jTextFieldEfeitoPepita.getText().length());
}//GEN-LAST:event_jTextFieldEfeitoPepitaFocusGained

    private void jSliderContribuicaoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderContribuicaoStateChanged
        this.desenhaGrafico();
}//GEN-LAST:event_jSliderContribuicaoStateChanged

    private void jTextFieldContribuicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldContribuicaoActionPerformed
        int value = jSliderContribuicao.getValue();
        String digitado = jTextFieldContribuicao.getText().replace(',', '.');
        try {
            double valor = Double.parseDouble(digitado);
            if ((int) (valor * 10000) <= jSliderContribuicao.getMaximum()) {
                jTextFieldContribuicao.setText("" + valor);
                jSliderContribuicao.setValue((int) (valor * 10000));
            } else {
                jTextFieldContribuicao.setText("" + value);
                jSliderContribuicao.setValue(value);
            }
        } catch (Exception e) {
            jTextFieldContribuicao.setText("" + value);
            jSliderContribuicao.setValue(value);
        }
}//GEN-LAST:event_jTextFieldContribuicaoActionPerformed

    private void jTextFieldContribuicaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldContribuicaoFocusGained
        jTextFieldContribuicao.setSelectionStart(0);
        jTextFieldContribuicao.setSelectionEnd(jTextFieldContribuicao.getText().length());
}//GEN-LAST:event_jTextFieldContribuicaoFocusGained

    private void jSliderCutOffStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderCutOffStateChanged
        this.desenhaGrafico();
}//GEN-LAST:event_jSliderCutOffStateChanged

    private void jTextFieldCutOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCutOffActionPerformed
        String digitado = jTextFieldCutOff.getText().replace(',', '.');
        try {
            double valor = Double.parseDouble(digitado);
            if ((int) (valor * 10000) <= jSliderCutOff.getMaximum()) {
                jTextFieldCutOff.setText("" + valor);
                jSliderCutOff.setValue((int) (valor * 10000));
            } else {
                jTextFieldCutOff.setText("" + (jSliderCutOff.getMaximum() / 2) / 10000);
                jSliderCutOff.setValue(jSliderCutOff.getMaximum() / 2);
            }
        } catch (Exception e) {
            jTextFieldCutOff.setText("" + (jSliderCutOff.getMaximum() / 2) / 10000);
            jSliderCutOff.setValue(jSliderCutOff.getMaximum() / 2);
        }
}//GEN-LAST:event_jTextFieldCutOffActionPerformed

    private void jTextFieldCutOffFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCutOffFocusGained
        jTextFieldCutOff.setSelectionStart(0);
        jTextFieldCutOff.setSelectionEnd(jTextFieldCutOff.getText().length());
}//GEN-LAST:event_jTextFieldCutOffFocusGained

    private void jTextFieldElitismoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldElitismoActionPerformed
        jTextFieldElitismo.setText(this.trataValorDigitado(jTextFieldElitismo.getText()));
    }//GEN-LAST:event_jTextFieldElitismoActionPerformed

    private void jTextFieldElitismoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldElitismoFocusGained
        jTextFieldElitismo.setSelectionStart(0);
        jTextFieldElitismo.setSelectionEnd(jTextFieldElitismo.getText().length());
    }//GEN-LAST:event_jTextFieldElitismoFocusGained

    private void jMenuItemTelaSemivariogramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTelaSemivariogramaActionPerformed
        jComboBoxMetodo.setSelectedIndex(0);
        jComboBoxModelo.setSelectedIndex(0);
        Component content = this.getContentPane();
        int x = (content.getWidth() - jInternalFrameTelaSemivariograma.getWidth()) / 2;
        int y = (content.getHeight() - jInternalFrameTelaSemivariograma.getHeight()) / 2;
        jInternalFrameTelaSemivariograma.setLocation(x, y);
        jInternalFrameTelaSemivariograma.setVisible(true);
    }//GEN-LAST:event_jMenuItemTelaSemivariogramaActionPerformed

    private void jButtonAbrirPlanilhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAbrirPlanilhaActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Selecione a planilha com os dados");
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES); // restringe a amostra a diretorios apenas
        fc.setFileFilter(new FileNameExtensionFilter("Planilha do Microsoft Excel", "xls"));
        fc.setCurrentDirectory(new File("arquivos/"));
        int res = fc.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();
            this.trataArquivo(arquivo, "planilha");
        } else { //nao selecionou nenhum diretorio
        }
}//GEN-LAST:event_jButtonAbrirPlanilhaActionPerformed

    private void jButtonCarregarDadosPlanilhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarregarDadosPlanilhaActionPerformed
        try {
            modeloLista = (DefaultListModel) jListX.getModel();
            String colunaX = (String) modeloLista.getElementAt(jListX.getSelectedIndex());
            String colunaY = (String) modeloLista.getElementAt(jListY.getSelectedIndex());
            String colunaZ = (String) modeloLista.getElementAt(jListZ.getSelectedIndex());
            List<String> elementosX = new ArrayList<String>();
            List<String> elementosY = new ArrayList<String>();
            List<String> elementosZ = new ArrayList<String>();
            modelo = (DefaultTableModel) jTablePlanilha.getModel();
            for (int i = 0; i < modelo.getRowCount(); i++) {
                for (int j = 0; j < modelo.getColumnCount(); j++) {
                    if (modelo.getColumnName(j).equals(colunaX)) {
                        String x = ((String) modelo.getValueAt(i, j));
                        elementosX.add(x.equals("") ? "0.0" : x.replace(",", "."));
                    }
                    if (modelo.getColumnName(j).equals(colunaY)) {
                        String y = ((String) modelo.getValueAt(i, j));
                        elementosY.add(y.equals("") ? "0.0" : y.replace(",", "."));
                    }
                    if (modelo.getColumnName(j).equals(colunaZ)) {
                        String z = ((String) modelo.getValueAt(i, j));
                        elementosZ.add(z.equals("") ? "0.0" : z.replace(",", "."));
                    }
                }
            }
            this.carregaDados(elementosX, elementosY, elementosZ);
        } catch (Exception e) {
            System.out.println("erro: " + e);
            JOptionPane.showMessageDialog(null, "Erro no carregamento dos dados", "Erro!", JOptionPane.INFORMATION_MESSAGE);
        }
}//GEN-LAST:event_jButtonCarregarDadosPlanilhaActionPerformed

    private void jButtonArquivoXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonArquivoXActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Selecione arquivo de texto com os dados para a variável X");
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES); // restringe a amostra a diretorios apenas
        fc.setFileFilter(new FileNameExtensionFilter("Arquivos de texto", "txt"));
        fc.setCurrentDirectory(new File("arquivos/"));
        int res = fc.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();
            this.trataArquivo(arquivo, "texto X");
        } else { //nao selecionou nenhum diretorio
        }
}//GEN-LAST:event_jButtonArquivoXActionPerformed

    private void jButtonArquivoYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonArquivoYActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Selecione arquivo de texto com os dados para a variável Y");
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES); // restringe a amostra a diretorios apenas
        fc.setFileFilter(new FileNameExtensionFilter("Arquivos de texto", "txt"));
        fc.setCurrentDirectory(new File("arquivos/"));
        int res = fc.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();
            this.trataArquivo(arquivo, "texto Y");
        } else { //nao selecionou nenhum diretorio
        }
}//GEN-LAST:event_jButtonArquivoYActionPerformed

    private void jButtonArquivoZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonArquivoZActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Selecione arquivo de texto com os dados para a variável Z");
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES); // restringe a amostra a diretorios apenas
        fc.setFileFilter(new FileNameExtensionFilter("Arquivos de texto", "txt"));
        fc.setCurrentDirectory(new File("arquivos/"));
        int res = fc.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();
            this.trataArquivo(arquivo, "texto Z");
        } else { //nao selecionou nenhum diretorio
        }
}//GEN-LAST:event_jButtonArquivoZActionPerformed

    private void jButtonCarregarDadosArquivoTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarregarDadosArquivoTextoActionPerformed
        try {
            List<String> elementosX = new ArrayList<String>();
            List<String> elementosY = new ArrayList<String>();
            List<String> elementosZ = new ArrayList<String>();
            modelo = (DefaultTableModel) jTableArquivoTexto.getModel();
            for (int i = 0; i < modelo.getRowCount(); i++) {
                elementosX.add(((String) modelo.getValueAt(i, 0)).replace(",", "."));
                elementosY.add(((String) modelo.getValueAt(i, 1)).replace(",", "."));
                elementosZ.add(((String) modelo.getValueAt(i, 2)).replace(",", "."));
            }
            this.carregaDados(elementosX, elementosY, elementosZ);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no carregamento dos dados", "Erro!", JOptionPane.INFORMATION_MESSAGE);
        }
}//GEN-LAST:event_jButtonCarregarDadosArquivoTextoActionPerformed

    private void jMenuItemDadosEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDadosEntradaActionPerformed
        jInternalFrameTelaSemivariograma.setVisible(false);
        jInternalFrameResultados.setVisible(false);
        jInternalFrameAG.setVisible(false);
        jSliderAlcance.setValue(jSliderAlcance.getMaximum() / 2);
        jSliderEfeitoPepita.setValue(0);
        jSliderContribuicao.setValue(2200);

        modelo = (DefaultTableModel) jTablePlanilha.getModel();
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        modelo.setColumnCount(0);
        modelo = (DefaultTableModel) jTableArquivoTexto.getModel();
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        try {
            modeloLista = (DefaultListModel) jListX.getModel();
            modeloLista.removeAllElements();
            modeloLista = (DefaultListModel) jListY.getModel();
            modeloLista.removeAllElements();
            modeloLista = (DefaultListModel) jListZ.getModel();
            modeloLista.removeAllElements();
        } catch (Exception e) {
        }
        Component content = this.getContentPane();
        int x = (content.getWidth() - jInternalFrameEntrada.getWidth()) / 2;
        int y = (content.getHeight() - jInternalFrameEntrada.getHeight()) / 2;
        jInternalFrameEntrada.setLocation(x, y);
        jInternalFrameEntrada.setVisible(true);
    }//GEN-LAST:event_jMenuItemDadosEntradaActionPerformed

    private void jMenuItemAGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAGActionPerformed
        if (jInternalFrameResultados.isVisible()) {
            jInternalFrameResultados.setVisible(false);
        }
        Component content = this.getContentPane();
        int x = (content.getWidth() - jInternalFrameAG.getWidth()) / 2;
        int y = (content.getHeight() - jInternalFrameAG.getHeight()) / 2;
        jInternalFrameAG.setLocation(x, y);
        jProgressBarAguarde.setStringPainted(false);
        jProgressBarAguarde.setValue(0);
        jInternalFrameAG.setVisible(true);
    }//GEN-LAST:event_jMenuItemAGActionPerformed

    private void jButtonVerResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerResultadoActionPerformed
        jSliderAlcance.setValue(Integer.parseInt(jTextFieldResultadoAlcance.getText()));
        jSliderEfeitoPepita.setValue((int) (Double.parseDouble(jTextFieldResultadoEfeitoPepita.getText()) * 10000));
        jSliderContribuicao.setValue((int) (Double.parseDouble(jTextFieldResultadoContribuicao.getText()) * 10000));

        if (jInternalFrameTelaSemivariograma.isVisible()) {
            jInternalFrameTelaSemivariograma.setVisible(false);
        }
        jInternalFrameTelaSemivariograma.setVisible(true);
    }//GEN-LAST:event_jButtonVerResultadoActionPerformed

    private void jTableResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableResultadosMouseClicked
        if (evt.getClickCount() == 2) {
            this.mostraResultado();
        }
    }//GEN-LAST:event_jTableResultadosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Tela().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupCruzamento;
    private javax.swing.ButtonGroup buttonGroupMutacao;
    private javax.swing.ButtonGroup buttonGroupSelecao;
    private javax.swing.JButton jButtonAbrirPlanilha;
    private javax.swing.JButton jButtonArquivoX;
    private javax.swing.JButton jButtonArquivoY;
    private javax.swing.JButton jButtonArquivoZ;
    private javax.swing.JButton jButtonCarregarDadosArquivoTexto;
    private javax.swing.JButton jButtonCarregarDadosPlanilha;
    private javax.swing.JButton jButtonIniciarAG;
    private javax.swing.JButton jButtonVerResultado;
    private javax.swing.JButton jButtonVoltarTelaAG;
    private javax.swing.JCheckBox jCheckBoxAritmetico;
    private javax.swing.JCheckBox jCheckBoxBLX;
    private javax.swing.JCheckBox jCheckBoxCreep;
    private javax.swing.JCheckBox jCheckBoxGaussiana;
    private javax.swing.JCheckBox jCheckBoxHeuristico;
    private javax.swing.JCheckBox jCheckBoxMediaGeometrica;
    private javax.swing.JCheckBox jCheckBoxMediaSimples;
    private javax.swing.JCheckBox jCheckBoxNaoUniforme;
    private javax.swing.JCheckBox jCheckBoxNaoUniformeMultipla;
    private javax.swing.JCheckBox jCheckBoxRoleta;
    private javax.swing.JCheckBox jCheckBoxTorneio;
    private javax.swing.JCheckBox jCheckBoxUniforme;
    private javax.swing.JComboBox jComboBoxMetodo;
    private javax.swing.JComboBox jComboBoxModelo;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JInternalFrame jInternalFrameAG;
    private javax.swing.JInternalFrame jInternalFrameEntrada;
    private javax.swing.JInternalFrame jInternalFrameResultados;
    private javax.swing.JInternalFrame jInternalFrameTelaSemivariograma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListX;
    private javax.swing.JList jListY;
    private javax.swing.JList jListZ;
    private javax.swing.JMenu jMenuArquivo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemAG;
    private javax.swing.JMenuItem jMenuItemDadosEntrada;
    private javax.swing.JMenuItem jMenuItemTelaSemivariograma;
    private javax.swing.JMenu jMenuSobre;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelCruzamento;
    private javax.swing.JPanel jPanelDesenho;
    private javax.swing.JPanel jPanelMutacao;
    private javax.swing.JPanel jPanelSelecao;
    private javax.swing.JProgressBar jProgressBarAguarde;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSlider jSliderAlcance;
    private javax.swing.JSlider jSliderContribuicao;
    private javax.swing.JSlider jSliderCutOff;
    private javax.swing.JSlider jSliderEfeitoPepita;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableArquivoTexto;
    private javax.swing.JTable jTablePlanilha;
    private javax.swing.JTable jTableResultados;
    private javax.swing.JTextArea jTextAreaResultado;
    private javax.swing.JTextField jTextFieldAlcance;
    private javax.swing.JTextField jTextFieldContribuicao;
    private javax.swing.JTextField jTextFieldCutOff;
    private javax.swing.JTextField jTextFieldEfeitoPepita;
    private javax.swing.JTextField jTextFieldElitismo;
    private javax.swing.JTextField jTextFieldMMQ;
    private javax.swing.JTextField jTextFieldNumGeracoes;
    private javax.swing.JTextField jTextFieldResultadoAlcance;
    private javax.swing.JTextField jTextFieldResultadoContribuicao;
    private javax.swing.JTextField jTextFieldResultadoEfeitoPepita;
    private javax.swing.JTextField jTextFieldTamPopulacao;
    private javax.swing.JTextField jTextFieldTxCruzamento;
    private javax.swing.JTextField jTextFieldTxMutacao;
    // End of variables declaration//GEN-END:variables

    private void desenhaGrafico() {
        jTextFieldAlcance.setText("" + jSliderAlcance.getValue());
        jTextFieldEfeitoPepita.setText("" + ((double) jSliderEfeitoPepita.getValue() / 10000));
        jTextFieldContribuicao.setText("" + ((double) jSliderContribuicao.getValue() / 10000));
        jTextFieldCutOff.setText("" + ((double) jSliderCutOff.getValue() / 10000));

        param.setModeloMatematico((String) jComboBoxModelo.getSelectedItem());
        param.setMetodoEstimacao((String) jComboBoxMetodo.getSelectedItem());
        param.getModelo().setAlcance(Integer.parseInt(jTextFieldAlcance.getText()));
        param.getModelo().setEfeitoPepita(Double.parseDouble(jTextFieldEfeitoPepita.getText()));
        param.getModelo().setContribuicao(Double.parseDouble(jTextFieldContribuicao.getText()));
        param.getPontos().setCutoff(Double.parseDouble(jTextFieldCutOff.getText()) * param.getPontos().getMaiorH());

        jPanelDesenho.setBorder(javax.swing.BorderFactory.createTitledBorder(null, param.getMetodoEstimacao(), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 153)));

        if (param.getMetodoEstimacao().equals("Cressie")) {
            param.setXmax(param.getPontos().getCressie().getXmax());
            param.setYmax(param.getPontos().getCressie().getYmax());
        } else {
            if (param.getMetodoEstimacao().equals("Matheron")) {
                param.setXmax(param.getPontos().getMatheron().getXmax());
                param.setYmax(param.getPontos().getMatheron().getYmax());
            } else {
                if (param.getMetodoEstimacao().equals("Pairwise")) {
                    param.setXmax(param.getPontos().getPairwise().getXmax());
                    param.setYmax(param.getPontos().getPairwise().getYmax());
                } else {
                    param.setXmax(jPanelDesenho.getWidth());
                    param.setYmax(jPanelDesenho.getHeight());
                }
            }
        }

        ((Desenho) jPanelDesenho).setaVariaveis(param, jPanelDesenho.getHeight(), jPanelDesenho.getWidth());
        jPanelDesenho.repaint();
        jTextFieldMMQ.setText("" + param.getModelo().getMmq());
        if ((!param.getMetodoEstimacao().equals("Metodo")) && (!param.getModeloMatematico().equals("Modelo"))) {
            jMenuItemAG.setEnabled(true);
        }
    }

    public String trataValorDigitado(String valor) {
        try {
            valor = valor.replace(',', '.');
            String retorno = "";
            for (int i = 0; i < valor.length(); i++) {
                if (this.isNumero(valor.charAt(i))) {
                    retorno += valor.charAt(i);
                }
            }
            return retorno;
        } catch (Exception e) {
            return "";
        }
    }

    public boolean isNumero(char numero) {
        if ((numero == '0') || (numero == '1') || (numero == '2') || (numero == '3') || (numero == '4')) {
            return true;
        } else {
            if ((numero == '5') || (numero == '6') || (numero == '7') || (numero == '8') || (numero == '9')) {
                return true;
            }
        }
        return false;
    }

    private void trataArquivo(File arquivo, String tipo) {
        if (tipo.equals("planilha")) {
            try {
                Workbook workbook = Workbook.getWorkbook(arquivo);
                Sheet sheet = workbook.getSheet(0);
                modelo = (DefaultTableModel) jTablePlanilha.getModel();
                while (modelo.getRowCount() > 0) {
                    modelo.removeRow(0);
                }
                modelo.setColumnCount(sheet.getColumns());

                Integer larguraColunas[] = new Integer[sheet.getColumns()];
                for (int i = 0; i < sheet.getColumns(); i++) {
                    larguraColunas[i] = 0;
                }
                Object nomeColunas[] = new Object[modelo.getColumnCount()];
                for (int i = 0; i < sheet.getRows(); i++) {
                    Object linha[] = new Object[sheet.getColumns()];
                    for (int j = 0; j < sheet.getColumns(); j++) {
                        if (i == 0) {
                            nomeColunas[j] = sheet.getCell(j, i).getContents();
                        } else {
                            linha[j] = sheet.getCell(j, i).getContents();
                        }
                        if (larguraColunas[j] < sheet.getCell(j, i).getContents().length()) { //maxima largura da coluna
                            larguraColunas[j] = sheet.getCell(j, i).getContents().length();
                        }
                    }
                    if (i != 0) {
                        modelo.addRow(linha);
                    }
                }

                modelo.setColumnIdentifiers(nomeColunas);
                jTablePlanilha.setModel(modelo);
                for (int i = 0; i < jTablePlanilha.getColumnCount(); i++) {
                    int l = larguraColunas[i];
                    int a = (l <= 15) ? (l <= 6 ? l * 13 : (((l > 6) && (l <= 10)) ? l * 8 : (int) (l * 7.5))) : l * 6;
                    jTablePlanilha.getColumnModel().getColumn(i).setPreferredWidth(a);
                    jTablePlanilha.getColumnModel().getColumn(i).setCellRenderer(cellRenderer);
                }

                //insere colunas nas listas
                modeloLista = new DefaultListModel();
                for (int i = 0; i < nomeColunas.length; i++) {
                    modeloLista.add(i, nomeColunas[i]);
                }
                jListX.setModel(modeloLista);
                jListY.setModel(modeloLista);
                jListZ.setModel(modeloLista);
                jListX.setSelectedIndex(0);
                jListY.setSelectedIndex(1);
                jListZ.setSelectedIndex(2);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Erro no carregamento dos dados!", "Erro!", JOptionPane.INFORMATION_MESSAGE);
            } catch (BiffException ex) {
                JOptionPane.showMessageDialog(null, "Erro no carregamento dos dados!", "Erro!", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            try {
                BufferedReader leitor = new BufferedReader(new FileReader(arquivo));
                String coordenada = "";
                List valores = new ArrayList();
                modelo = (DefaultTableModel) jTableArquivoTexto.getModel();
                while ((coordenada = leitor.readLine()) != null) {
                    valores.add(coordenada);
                }
                modelo.setRowCount(valores.size());
                for (int i = 0; i < valores.size(); i++) {
                    if (tipo.split(" ")[1].equals("X")) {
                        modelo.setValueAt(valores.get(i), i, 0);
                    }
                    if (tipo.split(" ")[1].equals("Y")) {
                        modelo.setValueAt(valores.get(i), i, 1);
                    }
                    if (tipo.split(" ")[1].equals("Z")) {
                        modelo.setValueAt(valores.get(i), i, 2);
                    }
                }
            } catch (Exception e) {
            }
        }
    }

    private void carregaDados(List<String> elementosX, List<String> elementosY, List<String> elementosZ) {
        int minimo = 0;
        if (elementosX.size() < elementosY.size()) {
            if (elementosX.size() < elementosZ.size()) {
                minimo = elementosX.size();
            } else {
                minimo = elementosZ.size();
            }
        } else {
            if (elementosY.size() < elementosZ.size()) {
                minimo = elementosY.size();
            } else {
                minimo = elementosZ.size();
            }
        }
        this.param.setPontos(new Entrada());
        for (int i = 0; i < minimo; i++) {
            Ponto ponto = new Ponto(Double.parseDouble(elementosX.get(i)), Double.parseDouble(elementosY.get(i)), Double.parseDouble(elementosZ.get(i)));
            param.getPontos().getListaPontos().add(ponto);
        }
        param.getPontos().calculaDistancias();
        ((Desenho) jPanelDesenho).setaVariaveis(param, jPanelDesenho.getHeight(), jPanelDesenho.getWidth());
        jPanelDesenho.repaint();

        jTextFieldMMQ.setText("" + param.getModelo().getMmq());
        JOptionPane.showMessageDialog(null, "Dados carregados com sucesso!", "Dados Carregados", JOptionPane.INFORMATION_MESSAGE);
        jInternalFrameEntrada.setVisible(false);
        jMenuItemTelaSemivariograma.setEnabled(true);
        jMenuItemAG.setEnabled(false);
        jComboBoxMetodo.setSelectedIndex(0);
        jComboBoxModelo.setSelectedIndex(0);
        jPanelDesenho.repaint();
    }

    private void mostraResultado() {
        int linha = jTableResultados.getSelectedRow();
        if (linha >= 0) {
            int a = new Integer("" + jTableResultados.getValueAt(linha, 0));
            double c0 = Double.parseDouble("" + jTableResultados.getValueAt(linha, 1));
            double c1 = Double.parseDouble("" + jTableResultados.getValueAt(linha, 2));
            jTextFieldAlcance.setText("" + a);
            jTextFieldEfeitoPepita.setText("" + c0);
            jTextFieldContribuicao.setText("" + c1);
            jSliderAlcance.setValue(a);
            jSliderEfeitoPepita.setValue((int) (c0 * 10000));
            jSliderContribuicao.setValue((int) (c1 * 10000));

            if (jInternalFrameTelaSemivariograma.isVisible()) {
                jInternalFrameTelaSemivariograma.setVisible(false);
            }
            jInternalFrameTelaSemivariograma.setVisible(true);
        }
    }
}
